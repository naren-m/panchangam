// PanchangamData represents the Panchangam data for a specific date, including Tithi, Nakshatra, Yoga, Karana, sunrise time, sunset time, and any additional events.
// PanchangamEvent represents an event or special occurrence in the Panchangam, such as Rahu Kalam or Yamagandam.
// GetPanchangamRequest is the request message sent to the server to retrieve Panchangam data for a specific date.
//GetPanchangamResponse is the response message containing the requested Panchangam data.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        v5.26.1
// source: proto/panchangam.proto

package panchangam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Panchangam data for a specific date
type PanchangamData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Date for which Panchangam data is provided (in ISO 8601 format: YYYY-MM-DD)
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// Tithi (lunar day) for the given date
	Tithi string `protobuf:"bytes,2,opt,name=tithi,proto3" json:"tithi,omitempty"`
	// Nakshatra (lunar mansion) for the given date
	Nakshatra string `protobuf:"bytes,3,opt,name=nakshatra,proto3" json:"nakshatra,omitempty"`
	// Yoga for the given date
	Yoga string `protobuf:"bytes,4,opt,name=yoga,proto3" json:"yoga,omitempty"`
	// Karana for the given date
	Karana string `protobuf:"bytes,5,opt,name=karana,proto3" json:"karana,omitempty"`
	// Sunrise time for the given date (in ISO 8601 format: HH:MM:SS)
	SunriseTime string `protobuf:"bytes,6,opt,name=sunrise_time,json=sunriseTime,proto3" json:"sunrise_time,omitempty"`
	// Sunset time for the given date (in ISO 8601 format: HH:MM:SS)
	SunsetTime string `protobuf:"bytes,7,opt,name=sunset_time,json=sunsetTime,proto3" json:"sunset_time,omitempty"`
	// Additional Panchangam details or events for the given date
	Events []*PanchangamEvent `protobuf:"bytes,8,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *PanchangamData) Reset() {
	*x = PanchangamData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_panchangam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanchangamData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanchangamData) ProtoMessage() {}

func (x *PanchangamData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_panchangam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanchangamData.ProtoReflect.Descriptor instead.
func (*PanchangamData) Descriptor() ([]byte, []int) {
	return file_proto_panchangam_proto_rawDescGZIP(), []int{0}
}

func (x *PanchangamData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *PanchangamData) GetTithi() string {
	if x != nil {
		return x.Tithi
	}
	return ""
}

func (x *PanchangamData) GetNakshatra() string {
	if x != nil {
		return x.Nakshatra
	}
	return ""
}

func (x *PanchangamData) GetYoga() string {
	if x != nil {
		return x.Yoga
	}
	return ""
}

func (x *PanchangamData) GetKarana() string {
	if x != nil {
		return x.Karana
	}
	return ""
}

func (x *PanchangamData) GetSunriseTime() string {
	if x != nil {
		return x.SunriseTime
	}
	return ""
}

func (x *PanchangamData) GetSunsetTime() string {
	if x != nil {
		return x.SunsetTime
	}
	return ""
}

func (x *PanchangamData) GetEvents() []*PanchangamEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// Represents an event or special occurrence in the Panchangam
type PanchangamEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name or description of the event
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Time of the event (in ISO 8601 format: HH:MM:SS)
	Time string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *PanchangamEvent) Reset() {
	*x = PanchangamEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_panchangam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PanchangamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PanchangamEvent) ProtoMessage() {}

func (x *PanchangamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_panchangam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PanchangamEvent.ProtoReflect.Descriptor instead.
func (*PanchangamEvent) Descriptor() ([]byte, []int) {
	return file_proto_panchangam_proto_rawDescGZIP(), []int{1}
}

func (x *PanchangamEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PanchangamEvent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

// Request message to retrieve Panchangam data for a specific date
type GetPanchangamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Date for which Panchangam data is requested (in ISO 8601 format: YYYY-MM-DD)
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetPanchangamRequest) Reset() {
	*x = GetPanchangamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_panchangam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPanchangamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPanchangamRequest) ProtoMessage() {}

func (x *GetPanchangamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_panchangam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPanchangamRequest.ProtoReflect.Descriptor instead.
func (*GetPanchangamRequest) Descriptor() ([]byte, []int) {
	return file_proto_panchangam_proto_rawDescGZIP(), []int{2}
}

func (x *GetPanchangamRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

// Response message containing Panchangam data for the requested date
type GetPanchangamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Panchangam data for the requested date
	PanchangamData *PanchangamData `protobuf:"bytes,1,opt,name=panchangam_data,json=panchangamData,proto3" json:"panchangam_data,omitempty"`
}

func (x *GetPanchangamResponse) Reset() {
	*x = GetPanchangamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_panchangam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPanchangamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPanchangamResponse) ProtoMessage() {}

func (x *GetPanchangamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_panchangam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPanchangamResponse.ProtoReflect.Descriptor instead.
func (*GetPanchangamResponse) Descriptor() ([]byte, []int) {
	return file_proto_panchangam_proto_rawDescGZIP(), []int{3}
}

func (x *GetPanchangamResponse) GetPanchangamData() *PanchangamData {
	if x != nil {
		return x.PanchangamData
	}
	return nil
}

var File_proto_panchangam_proto protoreflect.FileDescriptor

var file_proto_panchangam_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x61, 0x6d, 0x22, 0xfd, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x68, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x68,
	0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6b, 0x73, 0x68, 0x61, 0x74, 0x72, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6b, 0x73, 0x68, 0x61, 0x74, 0x72, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x6f, 0x67, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79,
	0x6f, 0x67, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x61, 0x72, 0x61, 0x6e, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x61, 0x72, 0x61, 0x6e, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x75, 0x6e, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x6e, 0x72, 0x69, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x6e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x50, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5c, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x2e, 0x50, 0x61, 0x6e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x70, 0x61, 0x6e, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x32, 0x58, 0x0a, 0x0a, 0x50, 0x61, 0x6e,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x12, 0x4a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x20,
	0x2e, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x61, 0x6e, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_panchangam_proto_rawDescOnce sync.Once
	file_proto_panchangam_proto_rawDescData = file_proto_panchangam_proto_rawDesc
)

func file_proto_panchangam_proto_rawDescGZIP() []byte {
	file_proto_panchangam_proto_rawDescOnce.Do(func() {
		file_proto_panchangam_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_panchangam_proto_rawDescData)
	})
	return file_proto_panchangam_proto_rawDescData
}

var file_proto_panchangam_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_panchangam_proto_goTypes = []interface{}{
	(*PanchangamData)(nil),        // 0: panchangam.PanchangamData
	(*PanchangamEvent)(nil),       // 1: panchangam.PanchangamEvent
	(*GetPanchangamRequest)(nil),  // 2: panchangam.GetPanchangamRequest
	(*GetPanchangamResponse)(nil), // 3: panchangam.GetPanchangamResponse
}
var file_proto_panchangam_proto_depIdxs = []int32{
	1, // 0: panchangam.PanchangamData.events:type_name -> panchangam.PanchangamEvent
	0, // 1: panchangam.GetPanchangamResponse.panchangam_data:type_name -> panchangam.PanchangamData
	2, // 2: panchangam.Panchangam.Get:input_type -> panchangam.GetPanchangamRequest
	3, // 3: panchangam.Panchangam.Get:output_type -> panchangam.GetPanchangamResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_panchangam_proto_init() }
func file_proto_panchangam_proto_init() {
	if File_proto_panchangam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_panchangam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanchangamData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_panchangam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PanchangamEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_panchangam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPanchangamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_panchangam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPanchangamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_panchangam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_panchangam_proto_goTypes,
		DependencyIndexes: file_proto_panchangam_proto_depIdxs,
		MessageInfos:      file_proto_panchangam_proto_msgTypes,
	}.Build()
	File_proto_panchangam_proto = out.File
	file_proto_panchangam_proto_rawDesc = nil
	file_proto_panchangam_proto_goTypes = nil
	file_proto_panchangam_proto_depIdxs = nil
}
